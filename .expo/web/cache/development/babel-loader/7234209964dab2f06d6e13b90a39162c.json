{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"pressEffect\", \"pressEffectColor\", \"onLayout\", \"onPressIn\", \"onPressOut\", \"onFocus\", \"onBlur\", \"android_ripple\", \"onMouseEnter\", \"onMouseLeave\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNPressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\n\nvar Pressable = function Pressable(_ref) {\n  var _ref$pressEffect = _ref.pressEffect,\n      pressEffect = _ref$pressEffect === void 0 ? Platform.select({\n    android: 'android-ripple',\n    web: 'ripple',\n    default: 'highlight'\n  }) : _ref$pressEffect,\n      _ref$pressEffectColor = _ref.pressEffectColor,\n      pressEffectColor = _ref$pressEffectColor === void 0 ? 'on-background' : _ref$pressEffectColor,\n      onLayout = _ref.onLayout,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      onFocus = _ref.onFocus,\n      onBlur = _ref.onBlur,\n      android_ripple = _ref.android_ripple,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePaletteColor = usePaletteColor(pressEffectColor),\n      color = _usePaletteColor.main;\n\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      size = _useState2[0],\n      setSize = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ripples = _useState4[0],\n      setRipples = _useState4[1];\n\n  var handleLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n    setSize({\n      width: width,\n      height: height\n    });\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(event);\n  }, [onLayout]);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pressed = _useState6[0],\n      setPressed = _useState6[1];\n\n  var handlePressIn = useCallback(function (event) {\n    setPressed(true);\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n\n    if (pressEffect === 'ripple') {\n      var _event$nativeEvent = event.nativeEvent,\n          locationX = _event$nativeEvent.locationX,\n          locationY = _event$nativeEvent.locationY;\n      var x = (locationX !== null && locationX !== void 0 ? locationX : size.width / 2) - 0.5;\n      var y = (locationY !== null && locationY !== void 0 ? locationY : size.height / 2) - 0.5;\n      var scale = new Animated.Value(0);\n      var opacity = new Animated.Value(1);\n      var ripple = {\n        key: \"\" + (Date.now() + Math.random()),\n        style: {\n          start: x,\n          top: y,\n          transform: [{\n            scale: scale\n          }],\n          opacity: opacity\n        }\n      };\n      setRipples(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [ripple]);\n      });\n      Animated.timing(scale, {\n        toValue: Math.max(size.width * 1.25 + Math.abs(size.width / 2 - x) * 2, size.height * 1.25 + Math.abs(size.height / 2 - y) * 2),\n        easing: Easing.out(Easing.ease),\n        duration: 400,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [onPressIn, pressEffect, size]);\n  var handlePressOut = useCallback(function (event) {\n    setPressed(false);\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n\n    if (pressEffect === 'ripple') {\n      Animated.timing(ripples[ripples.length - 1].style.opacity, {\n        toValue: 0,\n        easing: Easing.out(Easing.ease),\n        duration: 400,\n        useNativeDriver: false\n      }).start(function () {\n        setRipples(function (prevState) {\n          return prevState.slice(1);\n        });\n      });\n    }\n  }, [pressEffect, ripples, onPressOut]);\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      focused = _useState8[0],\n      setFocused = _useState8[1];\n\n  var handleFocus = useCallback(function (event) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n  }, [onFocus]);\n  var handleBlur = useCallback(function (event) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [onBlur]);\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hovered = _useState10[0],\n      setHovered = _useState10[1];\n\n  var handleMouseEnter = useCallback(function (event) {\n    setHovered(true);\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(event);\n  }, [onMouseEnter]);\n  var handleMouseLeave = useCallback(function (event) {\n    setHovered(false);\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(event);\n  }, [onMouseLeave]);\n  return React.createElement(RNPressable, _extends({\n    android_ripple: pressEffect === 'android-ripple' ? android_ripple !== null && android_ripple !== void 0 ? android_ripple : {\n      color: chroma(color).alpha(0.26).hex()\n    } : undefined,\n    onLayout: handleLayout,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, rest), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent'\n    }, {\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    }]\n  }), focused && !rest.disabled && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: chroma(color).alpha(0.12).hex()\n    }]\n  }), pressEffect === 'highlight' && pressed && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: chroma(color).alpha(0.26).hex()\n    }]\n  }), pressEffect === 'ripple' && ripples.length !== 0 && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.effectContainer]\n  }, ripples.map(function (ripple) {\n    return React.createElement(Animated.View, {\n      key: ripple.key,\n      style: [styles.ripple, {\n        backgroundColor: chroma(color).alpha(0.1).hex()\n      }, ripple.style]\n    });\n  })), children);\n};\n\nvar styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden'\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5\n  }\n});\nexport default Pressable;","map":{"version":3,"mappings":"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","names":["React","useCallback","useState","chroma","usePaletteColor","Pressable","pressEffect","Platform","select","android","web","default","pressEffectColor","onLayout","onPressIn","onPressOut","onFocus","onBlur","android_ripple","onMouseEnter","onMouseLeave","children","rest","color","main","width","height","size","setSize","ripples","setRipples","handleLayout","event","nativeEvent","layout","pressed","setPressed","handlePressIn","locationX","locationY","x","y","scale","Animated","Value","opacity","ripple","key","Date","now","Math","random","style","start","top","transform","prevState","timing","toValue","max","abs","easing","Easing","out","ease","duration","useNativeDriver","handlePressOut","length","slice","focused","setFocused","handleFocus","handleBlur","hovered","setHovered","handleMouseEnter","handleMouseLeave","RNPressable","alpha","hex","undefined","View","StyleSheet","absoluteFill","backgroundColor","disabled","transition","styles","effectContainer","map","create","overflow","position","borderRadius"],"sources":["Pressable.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable as RNPressable,\n  PressableProps as RNPressableProps,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport chroma from 'chroma-js';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface PressableProps extends RNPressableProps {\n  pressEffect?: 'none' | 'highlight' | 'ripple' | 'android-ripple';\n\n  pressEffectColor?: Color;\n\n  onMouseEnter?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  onMouseLeave?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  style?: any;\n}\n\nconst Pressable: React.FC<PressableProps> = ({\n  pressEffect = Platform.select({ android: 'android-ripple', web: 'ripple', default: 'highlight' }),\n  pressEffectColor = 'on-background',\n  onLayout,\n  onPressIn,\n  onPressOut,\n  onFocus,\n  onBlur,\n  android_ripple,\n  onMouseEnter,\n  onMouseLeave,\n  children,\n  ...rest\n}) => {\n  const { main: color } = usePaletteColor(pressEffectColor);\n\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  const [ripples, setRipples] = useState<{ key: string; style: any }[]>([]);\n\n  const handleLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const { width, height } = event.nativeEvent.layout;\n      setSize({ width, height });\n      onLayout?.(event);\n    },\n    [onLayout]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(true);\n      onPressIn?.(event);\n\n      if (pressEffect === 'ripple') {\n        const { locationX, locationY } = event.nativeEvent;\n\n        const x = (locationX ?? size.width / 2) - 0.5;\n        const y = (locationY ?? size.height / 2) - 0.5;\n\n        const scale = new Animated.Value(0);\n        const opacity = new Animated.Value(1);\n\n        const ripple = {\n          key: `${Date.now() + Math.random()}`,\n          style: { start: x, top: y, transform: [{ scale }], opacity },\n        };\n\n        setRipples((prevState) => [...prevState, ripple]);\n\n        Animated.timing(scale, {\n          toValue: Math.max(\n            size.width * 1.25 + Math.abs(size.width / 2 - x) * 2,\n            size.height * 1.25 + Math.abs(size.height / 2 - y) * 2\n          ),\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start();\n      }\n    },\n    [onPressIn, pressEffect, size]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(false);\n      onPressOut?.(event);\n\n      if (pressEffect === 'ripple') {\n        Animated.timing(ripples[ripples.length - 1].style.opacity, {\n          toValue: 0,\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start(() => {\n          setRipples((prevState) => prevState.slice(1));\n        });\n      }\n    },\n    [pressEffect, ripples, onPressOut]\n  );\n\n  const [focused, setFocused] = useState(false);\n\n  const handleFocus = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(true);\n      onFocus?.(event);\n    },\n    [onFocus]\n  );\n\n  const handleBlur = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(false);\n      onBlur?.(event);\n    },\n    [onBlur]\n  );\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(true);\n      onMouseEnter?.(event);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(false);\n      onMouseLeave?.(event);\n    },\n    [onMouseLeave]\n  );\n\n  return (\n    <RNPressable\n      android_ripple={\n        pressEffect === 'android-ripple' ? android_ripple ?? { color: chroma(color).alpha(0.26).hex() } : undefined\n      }\n      onLayout={handleLayout}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      {...({ onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave } as any)}\n      {...rest}\n    >\n      <View\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent',\n          },\n          { transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' } as any,\n        ]}\n      />\n\n      {focused && !rest.disabled && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.12).hex() }]} />\n      )}\n\n      {pressEffect === 'highlight' && pressed && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.26).hex() }]} />\n      )}\n\n      {pressEffect === 'ripple' && ripples.length !== 0 && (\n        <View style={[StyleSheet.absoluteFill, styles.effectContainer]}>\n          {ripples.map((ripple) => (\n            <Animated.View\n              key={ripple.key}\n              style={[styles.ripple, { backgroundColor: chroma(color).alpha(0.1).hex() }, ripple.style]}\n            />\n          ))}\n        </View>\n      )}\n\n      {children}\n    </RNPressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden',\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5,\n  },\n});\n\nexport default Pressable;\n"]},"metadata":{},"sourceType":"module"}