{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport { useTheme } from \"./base/ThemeContext\";\n\nvar Divider = function Divider(_ref) {\n  var color = _ref.color,\n      inset = _ref.inset,\n      leadingInset = _ref.leadingInset,\n      trailingInset = _ref.trailingInset,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      palette = _useTheme.palette;\n\n  return React.createElement(View, {\n    style: [{\n      height: 1,\n      backgroundColor: color !== null && color !== void 0 ? color : chroma(palette.surface.on).alpha(0.08).hex(),\n      marginStart: inset !== null && inset !== void 0 ? inset : leadingInset,\n      marginEnd: inset !== null && inset !== void 0 ? inset : trailingInset\n    }, style]\n  });\n};\n\nexport default Divider;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT;;AAcA,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAA0D;EAAA,IAAvDC,KAAuD,QAAvDA,KAAuD;EAAA,IAAhDC,KAAgD,QAAhDA,KAAgD;EAAA,IAAzCC,YAAyC,QAAzCA,YAAyC;EAAA,IAA3BC,aAA2B,QAA3BA,aAA2B;EAAA,IAAZC,KAAY,QAAZA,KAAY;;EAChG,gBAAoBN,QAAQ,EAA5B;EAAA,IAAQO,OAAR,aAAQA,OAAR;;EACA,OACET,oBAACU,IAAD;IACEF,KAAK,EAAE,CACL;MACEG,MAAM,EAAE,CADV;MAEEC,eAAe,EAAER,KAAF,SAAEA,SAAF,WAAEA,WAASH,MAAM,CAACQ,OAAO,CAACI,OAARJ,CAAgBK,EAAjB,CAANb,CAA2Bc,KAA3Bd,CAAiC,IAAjCA,EAAuCe,GAAvCf,EAF5B;MAGEgB,WAAW,EAAEZ,KAAF,SAAEA,SAAF,WAAEA,WAASC,YAHxB;MAIEY,SAAS,EAAEb,KAAF,SAAEA,SAAF,WAAEA,WAASE;IAJtB,CADK,EAOLC,KAPK;EADT,EADF;AAFF;;AAiBA,eAAeL,OAAf","names":["React","chroma","useTheme","Divider","color","inset","leadingInset","trailingInset","style","palette","View","height","backgroundColor","surface","on","alpha","hex","marginStart","marginEnd"],"sources":["Divider.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, View, ViewStyle } from 'react-native';\nimport chroma from 'chroma-js';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface DividerProps {\n  color?: string | undefined;\n\n  inset?: number | undefined;\n\n  leadingInset?: number | undefined;\n\n  trailingInset?: number | undefined;\n\n  style?: StyleProp<ViewStyle> | undefined;\n}\n\nconst Divider: React.FC<DividerProps> = ({ color, inset, leadingInset, trailingInset, style }) => {\n  const { palette } = useTheme();\n  return (\n    <View\n      style={[\n        {\n          height: 1,\n          backgroundColor: color ?? chroma(palette.surface.on).alpha(0.08).hex(),\n          marginStart: inset ?? leadingInset,\n          marginEnd: inset ?? trailingInset,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default Divider;\n"]},"metadata":{},"sourceType":"module"}