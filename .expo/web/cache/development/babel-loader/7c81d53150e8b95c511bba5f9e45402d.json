{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Surface from \"./Surface\";\nimport { useStyles } from \"./hooks/use-styles\";\n\nvar Backdrop = function Backdrop(_ref) {\n  var _ref$revealed = _ref.revealed,\n      revealed = _ref$revealed === void 0 ? false : _ref$revealed,\n      header = _ref.header,\n      headerHeight = _ref.headerHeight,\n      backLayer = _ref.backLayer,\n      backLayerHeight = _ref.backLayerHeight,\n      subheader = _ref.subheader,\n      subheaderHeight = _ref.subheaderHeight,\n      style = _ref.style,\n      headerContainerStyle = _ref.headerContainerStyle,\n      backLayerContainerStyle = _ref.backLayerContainerStyle,\n      frontLayerContainerStyle = _ref.frontLayerContainerStyle,\n      subheaderContainerStyle = _ref.subheaderContainerStyle,\n      children = _ref.children;\n\n  var _useState = useState(headerHeight !== null && headerHeight !== void 0 ? headerHeight : 0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentHeaderHeight = _useState2[0],\n      setCurrentHeaderHeight = _useState2[1];\n\n  var _useState3 = useState(backLayerHeight !== null && backLayerHeight !== void 0 ? backLayerHeight : 0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentBackLayerHeight = _useState4[0],\n      setCurrentBackLayerHeight = _useState4[1];\n\n  var _useState5 = useState(subheaderHeight !== null && subheaderHeight !== void 0 ? subheaderHeight : 0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentSubheaderHeight = _useState6[0],\n      setCurrentSubheaderHeight = _useState6[1];\n\n  var styles = useStyles(function (_ref2) {\n    var palette = _ref2.palette;\n    return {\n      container: {\n        flex: 1,\n        backgroundColor: palette.primary.main,\n        overflow: 'hidden'\n      },\n      frontLayer: {\n        position: 'absolute',\n        start: 0,\n        end: 0,\n        bottom: 0,\n        backgroundColor: palette.surface.main,\n        borderTopStartRadius: 16,\n        borderTopEndRadius: 16,\n        borderBottomStartRadius: 0,\n        borderBottomEndRadius: 0,\n        elevation: 1\n      }\n    };\n  });\n  var animated = useRef(new Animated.Value(revealed ? 1 : 0)).current;\n  useEffect(function () {\n    Animated.timing(animated, {\n      toValue: revealed ? 1 : 0,\n      duration: 300,\n      useNativeDriver: true\n    }).start();\n  }, [revealed]);\n  var dimensions = useWindowDimensions();\n  var translateY = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, dimensions.height < currentHeaderHeight + currentBackLayerHeight ? dimensions.height - currentHeaderHeight - currentSubheaderHeight : currentBackLayerHeight]\n  });\n  return React.createElement(View, {\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: [headerContainerStyle, {\n      height: headerHeight\n    }],\n    onLayout: function onLayout(e) {\n      if (!headerHeight) setCurrentHeaderHeight(e.nativeEvent.layout.height);\n    }\n  }, header), React.createElement(View, {\n    style: [backLayerContainerStyle, {\n      height: backLayerHeight\n    }],\n    onLayout: function onLayout(e) {\n      if (!backLayerHeight) setCurrentBackLayerHeight(e.nativeEvent.layout.height);\n    }\n  }, backLayer), React.createElement(Surface, {\n    style: [styles.frontLayer, {\n      top: currentHeaderHeight,\n      transform: [{\n        translateY: translateY\n      }]\n    }, frontLayerContainerStyle]\n  }, subheader && React.createElement(View, {\n    style: [subheaderContainerStyle, {\n      height: subheaderHeight\n    }],\n    onLayout: function onLayout(e) {\n      if (!subheaderHeight) setCurrentSubheaderHeight(e.nativeEvent.layout.height);\n    }\n  }, subheader), children));\n};\n\nexport default Backdrop;","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","useState","Surface","useStyles","Backdrop","revealed","header","headerHeight","backLayer","backLayerHeight","subheader","subheaderHeight","style","headerContainerStyle","backLayerContainerStyle","frontLayerContainerStyle","subheaderContainerStyle","children","currentHeaderHeight","setCurrentHeaderHeight","currentBackLayerHeight","setCurrentBackLayerHeight","currentSubheaderHeight","setCurrentSubheaderHeight","styles","palette","container","flex","backgroundColor","primary","main","overflow","frontLayer","position","start","end","bottom","surface","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","elevation","animated","Animated","Value","current","timing","toValue","duration","useNativeDriver","dimensions","useWindowDimensions","translateY","interpolate","inputRange","outputRange","height","View","onLayout","e","nativeEvent","layout","top","transform"],"sources":["Backdrop.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Animated, StyleProp, useWindowDimensions, View, ViewProps, ViewStyle } from 'react-native';\nimport Surface from './Surface';\nimport { useStyles } from './hooks/use-styles';\n\nexport interface BackdropProps {\n  revealed?: boolean;\n\n  header?: React.ReactElement | null;\n\n  headerHeight?: number;\n\n  backLayer?: React.ReactElement | null;\n\n  backLayerHeight?: number;\n\n  subheader?: React.ReactElement | null;\n\n  subheaderHeight?: number;\n\n  style?: StyleProp<ViewStyle>;\n\n  headerContainerStyle?: StyleProp<ViewStyle>;\n\n  backLayerContainerStyle?: StyleProp<ViewStyle>;\n\n  frontLayerContainerStyle?: Animated.AnimatedProps<ViewProps>['style'];\n\n  subheaderContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Backdrop: React.FC<BackdropProps> = ({\n  revealed = false,\n  header,\n  headerHeight,\n  backLayer,\n  backLayerHeight,\n  subheader,\n  subheaderHeight,\n  style,\n  headerContainerStyle,\n  backLayerContainerStyle,\n  frontLayerContainerStyle,\n  subheaderContainerStyle,\n  children,\n}) => {\n  const [currentHeaderHeight, setCurrentHeaderHeight] = useState(headerHeight ?? 0);\n  const [currentBackLayerHeight, setCurrentBackLayerHeight] = useState(backLayerHeight ?? 0);\n  const [currentSubheaderHeight, setCurrentSubheaderHeight] = useState(subheaderHeight ?? 0);\n\n  const styles = useStyles(({ palette }) => ({\n    container: {\n      flex: 1,\n      backgroundColor: palette.primary.main,\n      overflow: 'hidden',\n    },\n    frontLayer: {\n      position: 'absolute',\n      start: 0,\n      end: 0,\n      bottom: 0,\n      backgroundColor: palette.surface.main,\n      borderTopStartRadius: 16,\n      borderTopEndRadius: 16,\n      borderBottomStartRadius: 0,\n      borderBottomEndRadius: 0,\n      elevation: 1,\n    },\n  }));\n\n  const animated = useRef(new Animated.Value(revealed ? 1 : 0)).current;\n\n  useEffect(() => {\n    Animated.timing(animated, {\n      toValue: revealed ? 1 : 0,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  }, [revealed]);\n\n  const dimensions = useWindowDimensions();\n\n  const translateY = animated.interpolate({\n    inputRange: [0, 1],\n    outputRange: [\n      0,\n      dimensions.height < currentHeaderHeight + currentBackLayerHeight\n        ? dimensions.height - currentHeaderHeight - currentSubheaderHeight\n        : currentBackLayerHeight,\n    ],\n  });\n\n  return (\n    <View style={[styles.container, style]}>\n      <View\n        style={[headerContainerStyle, { height: headerHeight }]}\n        onLayout={(e) => {\n          if (!headerHeight) setCurrentHeaderHeight(e.nativeEvent.layout.height);\n        }}\n      >\n        {header}\n      </View>\n\n      <View\n        style={[backLayerContainerStyle, { height: backLayerHeight }]}\n        onLayout={(e) => {\n          if (!backLayerHeight) setCurrentBackLayerHeight(e.nativeEvent.layout.height);\n        }}\n      >\n        {backLayer}\n      </View>\n\n      <Surface\n        style={[styles.frontLayer, { top: currentHeaderHeight, transform: [{ translateY }] }, frontLayerContainerStyle]}\n      >\n        {subheader && (\n          <View\n            style={[subheaderContainerStyle, { height: subheaderHeight }]}\n            onLayout={(e) => {\n              if (!subheaderHeight) setCurrentSubheaderHeight(e.nativeEvent.layout.height);\n            }}\n          >\n            {subheader}\n          </View>\n        )}\n\n        {children}\n      </Surface>\n    </View>\n  );\n};\n\nexport default Backdrop;\n"]},"metadata":{},"sourceType":"module"}