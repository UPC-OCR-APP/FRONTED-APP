{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"leading\", \"trailing\", \"variant\", \"color\", \"style\", \"contentContainerStyle\", \"labelStyle\", \"leadingContainerStyle\", \"trailingContainerStyle\", \"children\", \"pressEffect\", \"pressEffectColor\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"onBlur\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"delayLongPress\", \"disabled\", \"hitSlop\", \"pressRetentionOffset\", \"android_disableSound\", \"android_ripple\", \"testOnly_pressed\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport Pressable from \"./Pressable\";\nimport Text from \"./Text\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useTheme } from \"./base/ThemeContext\";\n\nvar Chip = function Chip(_ref) {\n  var label = _ref.label,\n      leading = _ref.leading,\n      trailing = _ref.trailing,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'filled' : _ref$variant,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'on-surface' : _ref$color,\n      style = _ref.style,\n      contentContainerStyle = _ref.contentContainerStyle,\n      labelStyle = _ref.labelStyle,\n      leadingContainerStyle = _ref.leadingContainerStyle,\n      trailingContainerStyle = _ref.trailingContainerStyle,\n      children = _ref.children,\n      pressEffect = _ref.pressEffect,\n      pressEffectColor = _ref.pressEffectColor,\n      onPress = _ref.onPress,\n      onPressIn = _ref.onPressIn,\n      onPressOut = _ref.onPressOut,\n      onLongPress = _ref.onLongPress,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      delayLongPress = _ref.delayLongPress,\n      disabled = _ref.disabled,\n      hitSlop = _ref.hitSlop,\n      pressRetentionOffset = _ref.pressRetentionOffset,\n      android_disableSound = _ref.android_disableSound,\n      android_ripple = _ref.android_ripple,\n      testOnly_pressed = _ref.testOnly_pressed,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n  var palette = usePaletteColor(color, theme.palette.surface.main);\n  var scale = useMemo(function () {\n    return chroma.scale([palette.on, palette.main]);\n  }, [palette]);\n  var labelElement = typeof label === 'string' ? React.createElement(Text, {\n    variant: \"body2\",\n    style: [{\n      color: scale(0.87).hex()\n    }, labelStyle]\n  }, label) : typeof label === 'function' ? label({\n    color: scale(0.87).hex()\n  }) : label;\n  var leadingElement = typeof leading === 'function' ? leading({\n    color: scale(0.66).hex(),\n    size: 24\n  }) : leading;\n  var trailingElement = typeof trailing === 'function' ? trailing({\n    color: scale(0.66).hex(),\n    size: 18\n  }) : trailing;\n  return React.createElement(View, _extends({\n    style: [styles.container, variant === 'filled' && {\n      backgroundColor: scale(0.08).hex()\n    }, style]\n  }, rest), React.createElement(Pressable, {\n    pressEffect: pressEffect,\n    pressEffectColor: pressEffectColor !== null && pressEffectColor !== void 0 ? pressEffectColor : scale(0.87).hex(),\n    onPress: onPress,\n    onPressIn: onPressIn,\n    onPressOut: onPressOut,\n    onLongPress: onLongPress,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    delayLongPress: delayLongPress,\n    disabled: disabled,\n    hitSlop: hitSlop,\n    pressRetentionOffset: pressRetentionOffset,\n    android_disableSound: android_disableSound,\n    android_ripple: android_ripple,\n    testOnly_pressed: testOnly_pressed,\n    style: [styles.contentContainer, contentContainerStyle]\n  }, leadingElement && React.createElement(View, {\n    style: [styles.leadingContainer, leadingContainerStyle]\n  }, leadingElement), labelElement, children, trailingElement && React.createElement(View, {\n    style: [styles.trailingContainer, trailingContainerStyle]\n  }, trailingElement), variant === 'outlined' && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.outline, {\n      borderColor: scale(0.26).hex()\n    }]\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 16,\n    overflow: 'hidden'\n  },\n  contentContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 12,\n    height: 32\n  },\n  leadingContainer: {\n    marginStart: -8,\n    marginEnd: 8\n  },\n  trailingContainer: {\n    marginStart: 8,\n    marginEnd: -4\n  },\n  outline: {\n    borderWidth: 1,\n    borderRadius: 16\n  }\n});\nexport default Chip;","map":{"version":3,"mappings":"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","names":["React","useMemo","chroma","Pressable","Text","usePaletteColor","useTheme","Chip","label","leading","trailing","variant","color","style","contentContainerStyle","labelStyle","leadingContainerStyle","trailingContainerStyle","children","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","theme","palette","surface","main","scale","on","labelElement","hex","leadingElement","size","trailingElement","View","styles","container","backgroundColor","contentContainer","leadingContainer","trailingContainer","StyleSheet","absoluteFill","outline","borderColor","create","borderRadius","overflow","flexDirection","alignItems","paddingHorizontal","height","marginStart","marginEnd","borderWidth"],"sources":["Chip.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { StyleProp, StyleSheet, TextStyle, View, ViewProps, ViewStyle } from 'react-native';\nimport chroma from 'chroma-js';\nimport Pressable, { PressableProps } from './Pressable';\nimport Text from './Text';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface ChipProps extends Omit<ViewProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  /**\n   * The text to display in the chip.\n   */\n  label: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed before the `label`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element placed after the `label`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The variant of the chip.\n   * - `filled`: A filled chip.\n   * - `outlined`: A solid background with a border.\n   *\n   * @default \"filled\"\n   */\n  variant?: 'filled' | 'outlined';\n\n  /**\n   * The color of the chip.\n   */\n  color?: Color;\n\n  /**\n   * The style of the chip's container.\n   */\n  contentContainerStyle?: PressableProps['style'];\n\n  /**\n   * The style of the chip's label.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the chip's leading element.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the chip's trailing element.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst Chip: React.FC<ChipProps> = ({\n  label,\n  leading,\n  trailing,\n  variant = 'filled',\n  color = 'on-surface',\n  style,\n  contentContainerStyle,\n  labelStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  children,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n  ...rest\n}) => {\n  const theme = useTheme();\n\n  const palette = usePaletteColor(color, theme.palette.surface.main);\n\n  const scale = useMemo(() => chroma.scale([palette.on, palette.main]), [palette]);\n\n  const labelElement =\n    typeof label === 'string' ? (\n      <Text variant=\"body2\" style={[{ color: scale(0.87).hex() }, labelStyle]}>\n        {label}\n      </Text>\n    ) : typeof label === 'function' ? (\n      label({ color: scale(0.87).hex() })\n    ) : (\n      label\n    );\n\n  const leadingElement = typeof leading === 'function' ? leading({ color: scale(0.66).hex(), size: 24 }) : leading;\n\n  const trailingElement = typeof trailing === 'function' ? trailing({ color: scale(0.66).hex(), size: 18 }) : trailing;\n\n  return (\n    <View style={[styles.container, variant === 'filled' && { backgroundColor: scale(0.08).hex() }, style]} {...rest}>\n      <Pressable\n        pressEffect={pressEffect}\n        pressEffectColor={pressEffectColor ?? scale(0.87).hex()}\n        onPress={onPress}\n        onPressIn={onPressIn}\n        onPressOut={onPressOut}\n        onLongPress={onLongPress}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        delayLongPress={delayLongPress}\n        disabled={disabled}\n        hitSlop={hitSlop}\n        pressRetentionOffset={pressRetentionOffset}\n        android_disableSound={android_disableSound}\n        android_ripple={android_ripple}\n        testOnly_pressed={testOnly_pressed}\n        style={[styles.contentContainer, contentContainerStyle]}\n      >\n        {leadingElement && <View style={[styles.leadingContainer, leadingContainerStyle]}>{leadingElement}</View>}\n        {labelElement}\n        {children}\n        {trailingElement && <View style={[styles.trailingContainer, trailingContainerStyle]}>{trailingElement}</View>}\n\n        {variant === 'outlined' && (\n          <View style={[StyleSheet.absoluteFill, styles.outline, { borderColor: scale(0.26).hex() }]} />\n        )}\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 16,\n    overflow: 'hidden',\n  },\n  contentContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 12,\n    height: 32,\n  },\n  leadingContainer: {\n    marginStart: -8,\n    marginEnd: 8,\n  },\n  trailingContainer: {\n    marginStart: 8,\n    marginEnd: -4,\n  },\n  outline: {\n    borderWidth: 1,\n    borderRadius: 16,\n  },\n});\n\nexport default Chip;\n"]},"metadata":{},"sourceType":"module"}