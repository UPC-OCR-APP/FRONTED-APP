{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Login from \"./screen/Login\";\nimport Registro from \"./screen/Registro\";\nimport Inicio from \"./screen/Inicio\";\nimport Terminos from \"./screen/TerminosCondiciones\";\nimport RegistroHistoriaClinica from \"./screen/RegistroHistoriaClinica\";\nimport BusquedaHistoriaClinica from \"./screen/BusquedaHistoriaClinica\";\nimport ActualizarPerfil from \"./screen/ActualizarPerfil\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nvar App = function App() {\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      initialRouteName = _React$useState2[0],\n      setInitialRouteName = _React$useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      authUser();\n    }, 2000);\n  }, []);\n\n  var authUser = function _callee() {\n    var userData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userData'));\n\n          case 3:\n            userData = _context.sent;\n\n            if (userData) {\n              userData = JSON.parse(userData);\n\n              if (userData.loggedIn) {\n                setInitialRouteName('Inicio');\n              } else {\n                setInitialRouteName('Login');\n              }\n            } else {\n              setInitialRouteName('Registro');\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setInitialRouteName('Registro');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return _jsx(NavigationContainer, {\n    children: _jsx(_Fragment, {\n      children: _jsxs(Stack.Navigator, {\n        initialRouteName: initialRouteName,\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Registro\",\n          component: Registro\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"Inicio\",\n          component: Inicio\n        }), _jsx(Stack.Screen, {\n          name: \"ActualizarPerfil\",\n          component: ActualizarPerfil\n        }), _jsx(Stack.Screen, {\n          name: \"RegistroHistoriaClinica\",\n          component: RegistroHistoriaClinica\n        }), _jsx(Stack.Screen, {\n          name: \"BusquedaHistoriaClinica\",\n          component: BusquedaHistoriaClinica\n        }), _jsx(Stack.Screen, {\n          name: \"TerminosCondiciones\",\n          component: Terminos\n        })]\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","Login","Registro","Inicio","Terminos","RegistroHistoriaClinica","BusquedaHistoriaClinica","ActualizarPerfil","AsyncStorage","Stack","App","useState","initialRouteName","setInitialRouteName","useEffect","setTimeout","authUser","getItem","userData","JSON","parse","loggedIn","headerShown"],"sources":["E:/escritorio/Taller-Spring1/APP_OCR_APP/AppOCR/Frontend/App.js"],"sourcesContent":["import React from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport Login from './screen/Login';\r\nimport Registro from './screen/Registro';\r\nimport Inicio from './screen/Inicio';\r\nimport Terminos from './screen/TerminosCondiciones';\r\nimport RegistroHistoriaClinica from './screen/RegistroHistoriaClinica';\r\nimport BusquedaHistoriaClinica from './screen/BusquedaHistoriaClinica';\r\n\r\n\r\nimport ActualizarPerfil from './screen/ActualizarPerfil';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n//import Loader from './src/views/components/Loader';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst App = () => {\r\n  const [initialRouteName, setInitialRouteName] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    setTimeout(() => {\r\n      authUser();\r\n    }, 2000);\r\n  }, []);\r\n\r\n  const authUser = async () => {\r\n    try {\r\n      let userData = await AsyncStorage.getItem('userData');\r\n      if (userData) {\r\n        userData = JSON.parse(userData);\r\n        if (userData.loggedIn) {\r\n          setInitialRouteName('Inicio');\r\n        } else {\r\n          setInitialRouteName('Login');\r\n        }\r\n      } else {\r\n        setInitialRouteName('Registro');\r\n      }\r\n    } catch (error) {\r\n      setInitialRouteName('Registro');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      {\r\n        <>\r\n          <Stack.Navigator\r\n            initialRouteName={initialRouteName}\r\n            screenOptions={{headerShown: false}}>\r\n            <Stack.Screen\r\n              name=\"Registro\"\r\n              component={Registro}\r\n            />\r\n            <Stack.Screen name=\"Login\" component={Login} />\r\n            <Stack.Screen name=\"Inicio\" component={Inicio} />\r\n            <Stack.Screen name=\"ActualizarPerfil\" component={ActualizarPerfil} />\r\n            <Stack.Screen name=\"RegistroHistoriaClinica\" component={RegistroHistoriaClinica} />\r\n            <Stack.Screen name=\"BusquedaHistoriaClinica\" component={BusquedaHistoriaClinica} />\r\n            <Stack.Screen name=\"TerminosCondiciones\" component={Terminos} />\r\n          </Stack.Navigator>\r\n        </>\r\n      }\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,QAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,uBAAP;AAGA,OAAOC,gBAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;;;AAGA,IAAMC,KAAK,GAAGT,0BAA0B,EAAxC;;AAEA,IAAMU,GAAG,GAAG,SAANA,GAAM,GAAM;EAChB,sBAAgDZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAhD;EAAA;EAAA,IAAOC,gBAAP;EAAA,IAAyBC,mBAAzB;;EAEAf,KAAK,CAACgB,SAAN,CAAgB,YAAM;IACpBC,UAAU,CAAC,YAAM;MACfC,QAAQ;IACT,CAFS,EAEP,IAFO,CAAV;EAGD,CAJD,EAIG,EAJH;;EAMA,IAAMA,QAAQ,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,iCAEQR,YAAY,CAACS,OAAb,CAAqB,UAArB,CAFR;;UAAA;YAETC,QAFS;;YAGb,IAAIA,QAAJ,EAAc;cACZA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;;cACA,IAAIA,QAAQ,CAACG,QAAb,EAAuB;gBACrBR,mBAAmB,CAAC,QAAD,CAAnB;cACD,CAFD,MAEO;gBACLA,mBAAmB,CAAC,OAAD,CAAnB;cACD;YACF,CAPD,MAOO;cACLA,mBAAmB,CAAC,UAAD,CAAnB;YACD;;YAZY;YAAA;;UAAA;YAAA;YAAA;YAcbA,mBAAmB,CAAC,UAAD,CAAnB;;UAda;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAkBA,OACE,KAAC,mBAAD;IAAA,UAEI;MAAA,UACE,MAAC,KAAD,CAAO,SAAP;QACE,gBAAgB,EAAED,gBADpB;QAEE,aAAa,EAAE;UAACU,WAAW,EAAE;QAAd,CAFjB;QAAA,WAGE,KAAC,KAAD,CAAO,MAAP;UACE,IAAI,EAAC,UADP;UAEE,SAAS,EAAEpB;QAFb,EAHF,EAOE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,OAAnB;UAA2B,SAAS,EAAED;QAAtC,EAPF,EAQE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,QAAnB;UAA4B,SAAS,EAAEE;QAAvC,EARF,EASE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,kBAAnB;UAAsC,SAAS,EAAEI;QAAjD,EATF,EAUE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,yBAAnB;UAA6C,SAAS,EAAEF;QAAxD,EAVF,EAWE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,yBAAnB;UAA6C,SAAS,EAAEC;QAAxD,EAXF,EAYE,KAAC,KAAD,CAAO,MAAP;UAAc,IAAI,EAAC,qBAAnB;UAAyC,SAAS,EAAEF;QAApD,EAZF;MAAA;IADF;EAFJ,EADF;AAsBD,CAjDD;;AAmDA,eAAeM,GAAf"},"metadata":{},"sourceType":"module"}