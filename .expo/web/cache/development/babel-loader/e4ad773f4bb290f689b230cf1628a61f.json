{"ast":null,"code":"import React, { createContext, useContext, useMemo } from 'react';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nexport var defaultWindowSizes = {\n  base: 0,\n  sm: 600,\n  md: 905,\n  lg: 1240,\n  xl: 1440\n};\nexport var WindowSizeClassContext = createContext('base');\nexport var useWindowSizeClass = function useWindowSizeClass() {\n  return useContext(WindowSizeClassContext);\n};\nexport var WindowSizeClassProvider = function WindowSizeClassProvider(_ref) {\n  var _ref$windowSizes = _ref.windowSizes,\n      windowSizes = _ref$windowSizes === void 0 ? defaultWindowSizes : _ref$windowSizes,\n      children = _ref.children;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  var windowSizeClass = useMemo(function () {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n  return React.createElement(WindowSizeClassContext.Provider, {\n    value: windowSizeClass\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;;AAOA,OAAO,IAAMC,kBAA+B,GAAG;EAAEC,IAAI,EAAE,CAAR;EAAWC,EAAE,EAAE,GAAf;EAAoBC,EAAE,EAAE,GAAxB;EAA6BC,EAAE,EAAE,IAAjC;EAAuCC,EAAE,EAAE;AAA3C,CAAxC;AAMP,OAAO,IAAMC,sBAAsB,GAAGT,aAAa,CAAkB,MAAlB,CAA5C;AAEP,OAAO,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OAAMT,UAAU,CAACQ,sBAAD,CAAhB;AAAA,CAA3B;AAEP,OAAO,IAAME,uBAA+D,GAAG,SAAlEA,uBAAkE,OAGzE;EAAA,4BAFJC,WAEI;EAAA,IAFJA,WAEI,iCAFUT,kBAEV;EAAA,IADJU,QACI,QADJA,QACI;;EACJ,2BAAkBC,mBAAmB,EAArC;EAAA,IAAQC,KAAR,wBAAQA,KAAR;;EAEA,IAAMC,eAAgC,GAAGd,OAAO,CAAC,YAAM;IACrD,IAAIa,KAAK,IAAIH,WAAW,CAACR,IAArBW,IAA6BA,KAAK,GAAGH,WAAW,CAACP,EAArD,EAAyD,OAAO,MAAP;IACzD,IAAIU,KAAK,IAAIH,WAAW,CAACP,EAArBU,IAA2BA,KAAK,GAAGH,WAAW,CAACN,EAAnD,EAAuD,OAAO,IAAP;IACvD,IAAIS,KAAK,IAAIH,WAAW,CAACN,EAArBS,IAA2BA,KAAK,GAAGH,WAAW,CAACL,EAAnD,EAAuD,OAAO,IAAP;IACvD,IAAIQ,KAAK,IAAIH,WAAW,CAACL,EAArBQ,IAA2BA,KAAK,GAAGH,WAAW,CAACJ,EAAnD,EAAuD,OAAO,IAAP;IACvD,OAAO,IAAP;EAL8C,GAM7C,CAACO,KAAD,EAAQH,WAAR,CAN6C,CAAhD;EAQA,OAAOb,oBAACU,sBAAD,CAAwBQ,QAAxB;IAAiCC,KAAK,EAAEF;EAAxC,GAA0DH,QAA1D,CAAP;AAdK","names":["React","createContext","useContext","useMemo","defaultWindowSizes","base","sm","md","lg","xl","WindowSizeClassContext","useWindowSizeClass","WindowSizeClassProvider","windowSizes","children","useWindowDimensions","width","windowSizeClass","Provider","value"],"sources":["WindowSizeClassContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo } from 'react';\nimport { useWindowDimensions } from 'react-native';\n\nexport type WindowSizeClass = 'base' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport type WindowSizes = Record<WindowSizeClass, number>;\n\nexport const defaultWindowSizes: WindowSizes = { base: 0, sm: 600, md: 905, lg: 1240, xl: 1440 };\n\nexport interface WindowSizeClassProviderProps {\n  windowSizes?: WindowSizes;\n}\n\nexport const WindowSizeClassContext = createContext<WindowSizeClass>('base');\n\nexport const useWindowSizeClass = () => useContext(WindowSizeClassContext);\n\nexport const WindowSizeClassProvider: React.FC<WindowSizeClassProviderProps> = ({\n  windowSizes = defaultWindowSizes,\n  children,\n}) => {\n  const { width } = useWindowDimensions();\n\n  const windowSizeClass: WindowSizeClass = useMemo(() => {\n    if (width >= windowSizes.base && width < windowSizes.sm) return 'base';\n    if (width >= windowSizes.sm && width < windowSizes.md) return 'sm';\n    if (width >= windowSizes.md && width < windowSizes.lg) return 'md';\n    if (width >= windowSizes.lg && width < windowSizes.xl) return 'lg';\n    return 'xl';\n  }, [width, windowSizes]);\n\n  return <WindowSizeClassContext.Provider value={windowSizeClass}>{children}</WindowSizeClassContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}