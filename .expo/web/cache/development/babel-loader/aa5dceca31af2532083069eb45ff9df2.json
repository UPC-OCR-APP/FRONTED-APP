{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport createMultiStyleIconSet from \"./create-multi-style-icon-set\";\nvar FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand'\n};\n\nfunction createFA5iconSet(glyphMap) {\n  var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var pro = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var metadataKeys = Object.keys(metadata);\n  var fontFamily = \"FontAwesome5\" + (pro ? 'Pro' : 'Free');\n\n  function fallbackFamily(glyph) {\n    for (var i = 0; i < metadataKeys.length; i += 1) {\n      var family = metadataKeys[i];\n\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    var family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight) {\n    var family = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : fontFamily;\n    var styleName = style;\n    var fontFile = \"FontAwesome5_\" + (pro ? \"Pro_\" + styleName : styleName) + \".ttf\";\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n      fontFile = 'FontAwesome5_Brands.ttf';\n    }\n\n    return {\n      fontFamily: family + \"-\" + styleName,\n      fontFile: fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight: fontWeight\n        },\n        default: {}\n      }),\n      glyphMap: glyphMap\n    };\n  }\n\n  var brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome5Brands');\n  var lightIcons = createFontAwesomeStyle('Light', '300');\n  var regularIcons = createFontAwesomeStyle('Regular', '400');\n  var solidIcons = createFontAwesomeStyle('Solid', '900');\n  var Icon = createMultiStyleIconSet({\n    brand: brandIcons,\n    light: lightIcons,\n    regular: regularIcons,\n    solid: solidIcons\n  }, {\n    defaultStyle: 'regular',\n    fallbackFamily: fallbackFamily,\n    glyphValidator: glyphValidator\n  });\n  return Icon;\n}\n\nexport { createFA5iconSet, FA5Style };","map":{"version":3,"names":["createMultiStyleIconSet","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","fontWeight","styleName","fontFile","fontStyle","Platform","select","ios","default","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"sources":["E:/escritorio/Taller-Spring1/APP_OCR_APP/AppOCR/Frontend/node_modules/react-native-vector-icons/lib/create-icon-set-from-fontawesome5.js"],"sourcesContent":["import { Platform } from 'react-native';\r\nimport createMultiStyleIconSet from './create-multi-style-icon-set';\r\n\r\nconst FA5Style = {\r\n  regular: 'regular',\r\n  light: 'light',\r\n  solid: 'solid',\r\n  brand: 'brand',\r\n};\r\n\r\nfunction createFA5iconSet(glyphMap, metadata = {}, pro = false) {\r\n  const metadataKeys = Object.keys(metadata);\r\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\r\n\r\n  function fallbackFamily(glyph) {\r\n    for (let i = 0; i < metadataKeys.length; i += 1) {\r\n      const family = metadataKeys[i];\r\n      if (metadata[family].indexOf(glyph) !== -1) {\r\n        return family === 'brands' ? 'brand' : family;\r\n      }\r\n    }\r\n\r\n    return 'regular';\r\n  }\r\n\r\n  function glyphValidator(glyph, style) {\r\n    const family = style === 'brand' ? 'brands' : style;\r\n    if (metadataKeys.indexOf(family) === -1) return false;\r\n    return metadata[family].indexOf(glyph) !== -1;\r\n  }\r\n\r\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\r\n    let styleName = style;\r\n    let fontFile = `FontAwesome5_${pro ? `Pro_${styleName}` : styleName}.ttf`;\r\n\r\n    if (styleName === 'Brands') {\r\n      styleName = 'Regular';\r\n      fontFile = 'FontAwesome5_Brands.ttf';\r\n    }\r\n\r\n    return {\r\n      fontFamily: `${family}-${styleName}`,\r\n      fontFile,\r\n      fontStyle: Platform.select({\r\n        ios: {\r\n          fontWeight,\r\n        },\r\n        default: {},\r\n      }),\r\n      glyphMap,\r\n    };\r\n  }\r\n\r\n  const brandIcons = createFontAwesomeStyle(\r\n    'Brands',\r\n    '400',\r\n    'FontAwesome5Brands'\r\n  );\r\n  const lightIcons = createFontAwesomeStyle('Light', '300');\r\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\r\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\r\n  const Icon = createMultiStyleIconSet(\r\n    {\r\n      brand: brandIcons,\r\n      light: lightIcons,\r\n      regular: regularIcons,\r\n      solid: solidIcons,\r\n    },\r\n    {\r\n      defaultStyle: 'regular',\r\n      fallbackFamily,\r\n      glyphValidator,\r\n    }\r\n  );\r\n\r\n  return Icon;\r\n}\r\n\r\nexport { createFA5iconSet, FA5Style };\r\n"],"mappings":";AACA,OAAOA,uBAAP;AAEA,IAAMC,QAAQ,GAAG;EACfC,OAAO,EAAE,SADM;EAEfC,KAAK,EAAE,OAFQ;EAGfC,KAAK,EAAE,OAHQ;EAIfC,KAAK,EAAE;AAJQ,CAAjB;;AAOA,SAASC,gBAAT,CAA0BC,QAA1B,EAAgE;EAAA,IAA5BC,QAA4B,uEAAjB,EAAiB;EAAA,IAAbC,GAAa,uEAAP,KAAO;EAC9D,IAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAArB;EACA,IAAMK,UAAU,qBAAkBJ,GAAG,GAAG,KAAH,GAAW,MAAhC,CAAhB;;EAEA,SAASK,cAAT,CAAwBC,KAAxB,EAA+B;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,YAAY,CAACO,MAAjC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;MAC/C,IAAME,MAAM,GAAGR,YAAY,CAACM,CAAD,CAA3B;;MACA,IAAIR,QAAQ,CAACU,MAAD,CAAR,CAAiBC,OAAjB,CAAyBJ,KAAzB,MAAoC,CAAC,CAAzC,EAA4C;QAC1C,OAAOG,MAAM,KAAK,QAAX,GAAsB,OAAtB,GAAgCA,MAAvC;MACD;IACF;;IAED,OAAO,SAAP;EACD;;EAED,SAASE,cAAT,CAAwBL,KAAxB,EAA+BM,KAA/B,EAAsC;IACpC,IAAMH,MAAM,GAAGG,KAAK,KAAK,OAAV,GAAoB,QAApB,GAA+BA,KAA9C;IACA,IAAIX,YAAY,CAACS,OAAb,CAAqBD,MAArB,MAAiC,CAAC,CAAtC,EAAyC,OAAO,KAAP;IACzC,OAAOV,QAAQ,CAACU,MAAD,CAAR,CAAiBC,OAAjB,CAAyBJ,KAAzB,MAAoC,CAAC,CAA5C;EACD;;EAED,SAASO,sBAAT,CAAgCD,KAAhC,EAAuCE,UAAvC,EAAwE;IAAA,IAArBL,MAAqB,uEAAZL,UAAY;IACtE,IAAIW,SAAS,GAAGH,KAAhB;IACA,IAAII,QAAQ,sBAAmBhB,GAAG,YAAUe,SAAV,GAAwBA,SAA9C,UAAZ;;IAEA,IAAIA,SAAS,KAAK,QAAlB,EAA4B;MAC1BA,SAAS,GAAG,SAAZ;MACAC,QAAQ,GAAG,yBAAX;IACD;;IAED,OAAO;MACLZ,UAAU,EAAKK,MAAL,SAAeM,SADpB;MAELC,QAAQ,EAARA,QAFK;MAGLC,SAAS,EAAEC,QAAQ,CAACC,MAAT,CAAgB;QACzBC,GAAG,EAAE;UACHN,UAAU,EAAVA;QADG,CADoB;QAIzBO,OAAO,EAAE;MAJgB,CAAhB,CAHN;MASLvB,QAAQ,EAARA;IATK,CAAP;EAWD;;EAED,IAAMwB,UAAU,GAAGT,sBAAsB,CACvC,QADuC,EAEvC,KAFuC,EAGvC,oBAHuC,CAAzC;EAKA,IAAMU,UAAU,GAAGV,sBAAsB,CAAC,OAAD,EAAU,KAAV,CAAzC;EACA,IAAMW,YAAY,GAAGX,sBAAsB,CAAC,SAAD,EAAY,KAAZ,CAA3C;EACA,IAAMY,UAAU,GAAGZ,sBAAsB,CAAC,OAAD,EAAU,KAAV,CAAzC;EACA,IAAMa,IAAI,GAAGnC,uBAAuB,CAClC;IACEK,KAAK,EAAE0B,UADT;IAEE5B,KAAK,EAAE6B,UAFT;IAGE9B,OAAO,EAAE+B,YAHX;IAIE7B,KAAK,EAAE8B;EAJT,CADkC,EAOlC;IACEE,YAAY,EAAE,SADhB;IAEEtB,cAAc,EAAdA,cAFF;IAGEM,cAAc,EAAdA;EAHF,CAPkC,CAApC;EAcA,OAAOe,IAAP;AACD;;AAED,SAAS7B,gBAAT,EAA2BL,QAA3B"},"metadata":{},"sourceType":"module"}